1. Reactor模式优点：
  
   Reacor是编写高性能网络服务器必务技术之一，它具有如下的优点：
   (1) 响应快，不必为单个同步时间所阻塞，虽然Reactor本身依然是同步的；
   (2) 编程相对简单，可以最大程序避免复杂的多线程及同步问题，并且避免了多线程/进程的切换开销；
   (3) 可扩展性，可以方便的通过增加Reactor实例个数来充分利用CPU资源；
  （4）可复用性，Reactor框架本身与具体事件处理逻辑无关，具有很高的复用性；

2. Reactor模式框架
   
   使用Reactor模型，必备的几个组件：事件源、Reactor框架、多路复用机制和事件处理程序。
  (1)  事件源
       Linux上是文件描述符，Windows上就是Socket或者Handle了，这里统一称为句柄集；程序在指定的句柄上注册关心的事件，
       比如I/O事件;
  (2)  event demultiplexer(事件多路分发机制)
       由操系统提供的I/O多路复用机制，比如select和epoll，程序首先将其关心的句柄(事件源)及其事件注册到event demultiplexer上；
       当有事件到达时，event demultiplexer会发出通知在已经注册的句柄集中，一个或多个句柄的事件已经就绪；
       程序收到通知后，就可以在非阻塞的情况下对事件进行处理了。
       对应到libevent中，依然是select、poll、epoll等，但是libevent使用结构体eventop进行了封装，以统一的接口来支持
       这些I/O多路复用机制，达到了对象隐藏底层系统机制的目的。
  (3)  Reactor(反应器)
       Reactor，是事件管理的接口，内部使用event demultiplexer注册、注销事件；并运行事件循环，当有事件进入就绪状态时
       调用注册事件的回调函数处理事件。
       对应到libevent中就是event_base结构体
  (4)  事件处理程序
       事件处理程序提供了一组接口，每个接口对应了一种类型的事件，供Reactor在相应的事件发生时调用，执行相应的事件处理。
       通常它会绑定一个有效的句柄
       对应到libevent中，就是event结构体


































    